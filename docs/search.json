[{"path":[]},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rajan Shankar. Author, maintainer. Garth Tarr. Author. Ines Wilms. Author. Jakob Raymaekers. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shankar R, Tarr G, Wilms , Raymaekers J (2025). roams: Robust Outlier-Adjusted Mean-Shift Estimation State-Space Models. R package version 0.3.1.","code":"@Manual{,   title = {roams: Robust Outlier-Adjusted Mean-Shift Estimation of State-Space Models},   author = {Rajan Shankar and Garth Tarr and Ines Wilms and Jakob Raymaekers},   year = {2025},   note = {R package version 0.3.1}, }"},{"path":"/reference/attach_insample_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach In-Sample Information to Fitted State Space Model — attach_insample_info","title":"Attach In-Sample Information to Fitted State Space Model — attach_insample_info","text":"Attaches detailed -sample information—predicted, filtered, smoothed states observations—model object fitted using package’s supported SSM estimation methods. quantities stored default model objects due potentially large memory footprint.","code":""},{"path":"/reference/attach_insample_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach In-Sample Information to Fitted State Space Model — attach_insample_info","text":"","code":"attach_insample_info(model)"},{"path":"/reference/attach_insample_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach In-Sample Information to Fitted State Space Model — attach_insample_info","text":"model fitted model object class robularized_SSM, classical_SSM, oracle_SSM, huber_robust_SSM, trimmed_robust_SSM.","code":""},{"path":"/reference/attach_insample_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach In-Sample Information to Fitted State Space Model — attach_insample_info","text":"modified version input model object, additional class insample_info, following -sample elements appended: filtered_states Filtered state estimates using data time point. predicted_states One-step-ahead state predictions. filtered_observations Expected observations given data time point. predicted_observations One-step-ahead forecasts observations. filtered_states_var List filtered state variance matrices. predicted_states_var List one-step-ahead state prediction variances. predicted_observations_var List one-step-ahead observation forecast variances. mahalanobis_residuals Vector Mahalanobis distances residuals predicted observations. models class robularized_SSM, classical_SSM, oracle_SSM, following additional elements also attached: smoothed_states Posterior means hidden states using data. smoothed_observations Posterior mean observed series based smoothed states. smoothed_states_var List smoothed state variance matrices.","code":""},{"path":"/reference/attach_insample_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attach In-Sample Information to Fitted State Space Model — attach_insample_info","text":"attached outputs enable richer diagnostics, outlier inspection, plotting. huber_robust_SSM trimmed_robust_SSM models, -sample information computed using custom robust filtering function, smoothed quantities (smoothed_states, smoothed_observations, smoothed_states_var) available. function applied model object.","code":""},{"path":[]},{"path":"/reference/autoplot.robularized_SSM_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoplot for Robularized State Space Model List — autoplot.robularized_SSM_list","title":"Autoplot for Robularized State Space Model List — autoplot.robularized_SSM_list","text":"Generates diagnostic plots list robust state space models fit across sequence \\(\\lambda\\) values. Two model attributes plotted \\(\\lambda\\), panel, vertical dashed line indicating model lowest BIC among fewer 50% outliers.","code":""},{"path":"/reference/autoplot.robularized_SSM_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoplot for Robularized State Space Model List — autoplot.robularized_SSM_list","text":"","code":"# S3 method for class 'robularized_SSM_list' autoplot(object, attribute1 = \"BIC\", attribute2 = \"prop_outlying\", ...)"},{"path":"/reference/autoplot.robularized_SSM_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoplot for Robularized State Space Model List — autoplot.robularized_SSM_list","text":"object object class robularized_SSM_list returned robularized_SSM multiple \\(\\lambda\\) values used. attribute1 character string indicating first model attribute plot top panel. Options include \"lambda\", \"prop_outlying\", \"BIC\", \"loglik\", \"RSS\", \"iterations\", \"value\", \"counts\". Defaults \"BIC\". attribute2 character string indicating second model attribute plot bottom panel. Uses options attribute1. Defaults \"prop_outlying\". ... arguments passed specific methods. used method.","code":""},{"path":"/reference/autoplot.robularized_SSM_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autoplot for Robularized State Space Model List — autoplot.robularized_SSM_list","text":"ggplot object arranged using patchwork package, showing specified attributes plotted \\(\\lambda\\) two vertically stacked panels.","code":""},{"path":"/reference/autoplot.robularized_SSM_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Autoplot for Robularized State Space Model List — autoplot.robularized_SSM_list","text":"panel, red dashed vertical line indicates model lowest BIC among fewer 50% outlying time points, serving heuristic robust model selection.","code":""},{"path":[]},{"path":"/reference/best_BIC_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Best Model Based on BIC — best_BIC_model","title":"Select Best Model Based on BIC — best_BIC_model","text":"Extracts best-fitting model robularized_SSM_list object according Bayesian Information Criterion (BIC), excluding models 50% outlying observations.","code":""},{"path":"/reference/best_BIC_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Best Model Based on BIC — best_BIC_model","text":"","code":"best_BIC_model(model_list)"},{"path":"/reference/best_BIC_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Best Model Based on BIC — best_BIC_model","text":"model_list object class robularized_SSM_list","code":""},{"path":"/reference/best_BIC_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Best Model Based on BIC — best_BIC_model","text":"single robularized_SSM object corresponding model smallest BIC among fewer 50% outlying observations.","code":""},{"path":"/reference/best_BIC_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Best Model Based on BIC — best_BIC_model","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming `models` is a robularized_SSM_list: best_model <- best_BIC_model(models) } # }"},{"path":"/reference/classical_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Classical State Space Model Fit — classical_SSM","title":"Classical State Space Model Fit — classical_SSM","text":"Fits state space model using classical maximum likelihood estimation attempt detect account outliers. serves baseline model comparison.","code":""},{"path":"/reference/classical_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classical State Space Model Fit — classical_SSM","text":"","code":"classical_SSM(   y,   init_par,   build,   lower = NA,   upper = NA,   control = list(parscale = init_par) )"},{"path":"/reference/classical_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classical State Space Model Fit — classical_SSM","text":"y numeric matrix observations (time points rows). init_par numeric vector initial parameter values. build function returns dlm model given parameter vector. specify_SSM() function can used create build function. lower Optional numeric vector lower bounds parameter estimation. Defaults -Inf. Must length init_par. upper Optional numeric vector upper bounds parameter estimation. Defaults Inf. Must length init_par. control Optional list control parameters passed optim via dlm::dlmMLE(). Default list(parscale = init_par), can help optimizer parameters vastly different scales.","code":""},{"path":"/reference/classical_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classical State Space Model Fit — classical_SSM","text":"object class classical_SSM containing optimization result, original data, original build function.","code":""},{"path":[]},{"path":"/reference/get_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Attributes from a Robularized SSM List — get_attribute","title":"Extract Attributes from a Robularized SSM List — get_attribute","text":"Retrieves specified attribute model within robularized_SSM_list object. Also works single model class robularized_SSM provided.","code":""},{"path":"/reference/get_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Attributes from a Robularized SSM List — get_attribute","text":"","code":"get_attribute(model_list, attribute)"},{"path":"/reference/get_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Attributes from a Robularized SSM List — get_attribute","text":"model_list object class robularized_SSM_list single robularized_SSM model. May optionally include -sample information added via attach_insample_info. attribute character string specifying name attribute extract. Must one available scalar attributes (e.g. BIC, lambda) list/vector attributes (e.g. filtered_states, smoothed_states).","code":""},{"path":"/reference/get_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Attributes from a Robularized SSM List — get_attribute","text":"attribute scalar attribute (e.g., BIC lambda), returns numeric character vector containing attribute across models. attribute list-like attribute (e.g., par gamma), returns list values, across models.","code":""},{"path":"/reference/get_attribute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Attributes from a Robularized SSM List — get_attribute","text":"Available attributes depend whether -sample information attached using attach_insample_info(). , core model components (e.g. par, gamma, y) scalar metrics (e.g. BIC, loglik) available. Scalar Attributes (always available): lambda: Regularization penalty value. prop_outlying: Proportion outlying time points identified. BIC: Bayesian Information Criterion. loglik: Log-likelihood. RSS: Residual sum squares. iterations: Number IPOD iterations. value: Final objective function value. convergence: Convergence status optimizer. message: Optimizer termination message. List/Vector Attributes always available: par, gamma, y, counts List/Vector Attributes available -sample info attached: smoothed_states, filtered_states, predicted_states smoothed_observations, filtered_observations, predicted_observations smoothed_states_var, filtered_states_var, predicted_states_var, predicted_observations_var mahalanobis_residuals Note '-sample info' attributes typically available model_list single robularized_SSM -sample information already attached using attach_insample_info(). model_list robularized_SSM_list, attributes available unless models list -sample information attached.","code":""},{"path":[]},{"path":"/reference/huber_robust_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Huber-Robust State Space Model Fit — huber_robust_SSM","title":"Huber-Robust State Space Model Fit — huber_robust_SSM","text":"Fits robust state space model minimizing Huber loss objective per Crevits Croux (2018), providing protection moderate outliers. predicted observations used Huber loss computed using Huber robust filter Cipra Romera (1997).","code":""},{"path":"/reference/huber_robust_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Huber-Robust State Space Model Fit — huber_robust_SSM","text":"","code":"huber_robust_SSM(   y,   init_par,   build,   lower = NA,   upper = NA,   control = list(parscale = init_par) )"},{"path":"/reference/huber_robust_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Huber-Robust State Space Model Fit — huber_robust_SSM","text":"y numeric matrix observations (time points rows). init_par numeric vector initial parameter values. build function returns dlm model given parameter vector. specify_SSM() function can used create build function. lower Optional numeric vector lower bounds parameter estimation. Defaults -Inf. Must length init_par. upper Optional numeric vector upper bounds parameter estimation. Defaults Inf. Must length init_par. control Optional list control parameters passed optim. Default list(parscale = init_par), can help optimizer parameters vastly different scales.","code":""},{"path":"/reference/huber_robust_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Huber-Robust State Space Model Fit — huber_robust_SSM","text":"object class huber_robust_SSM containing optimization result, original data, original build function.","code":""},{"path":"/reference/huber_robust_SSM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Huber-Robust State Space Model Fit — huber_robust_SSM","text":"Crevits R. Croux C. (2018). Robust Estimation Linear State Space Models. *Communications Statistics: Simulation Computation* Cipra, T., Romera, R. (1997). Kalman filter outliers missing observations. *Test* 6, 379–395. https://doi.org/10.1007/BF02564705","code":""},{"path":[]},{"path":"/reference/oos_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Out-of-Sample Inference for Fitted State Space Model — oos_filter","title":"Compute Out-of-Sample Inference for Fitted State Space Model — oos_filter","text":"Applies fitted model parameters user-supplied --sample dataset compute predicted filtered states observations. Robust classical inference procedures supported depending class input model.","code":""},{"path":"/reference/oos_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Out-of-Sample Inference for Fitted State Space Model — oos_filter","text":"","code":"oos_filter(   y_oos,   model,   build,   outlier_locs = rep(0, nrow(y_oos)),   threshold = sqrt(qchisq(0.99, ncol(y_oos))),   multiplier = 2 )"},{"path":"/reference/oos_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Out-of-Sample Inference for Fitted State Space Model — oos_filter","text":"y_oos numeric matrix containing --sample observations. row corresponds time point. model fitted model object class robularized_SSM, classical_SSM, oracle_SSM, huber_robust_SSM, trimmed_robust_SSM. build function maps numeric parameter vector corresponding dlm model object. specify_SSM function can used create build function. outlier_locs logical binary vector length nrow(y), indicating time points treated missing (.e., time points known outliers). Used oracle_SSM models. threshold Mahalanobis distance threshold identifying outliers robularized_SSM models. Default sqrt(qchisq(0.99, ncol(y))). multiplier Multiplier quickly filter grows filtered state variance (uncertainty) detecting outlier robularized_SSM models. Default 2.","code":""},{"path":"/reference/oos_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Out-of-Sample Inference for Fitted State Space Model — oos_filter","text":"named list containing --sample inference results: filtered_states Filtered state estimates using --sample data. predicted_states One-step-ahead state predictions. filtered_observations Expected observations given past --sample data. predicted_observations One-step-ahead forecasts observations. filtered_states_var List filtered state variance matrices. predicted_states_var List one-step-ahead state prediction variances. predicted_observations_var List one-step-ahead observation forecast variances. mahalanobis_residuals Vector Mahalanobis distances residuals predicted observations. outliers_flagged Vector 1's 0's indicating whether timepoints flagged outlying based threshold supplied (available model class robularized_SSM).","code":""},{"path":"/reference/oos_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Out-of-Sample Inference for Fitted State Space Model — oos_filter","text":"function reuses model's fitted parameters generate inference new data y_oos. Robust variants use appropriate robust filters, classical oracle models use standard Kalman filtering. oracle_SSM models, observations flagged outlier_locs treated missing filtering.","code":""},{"path":[]},{"path":"/reference/oracle_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Oracle State Space Model Fit — oracle_SSM","title":"Oracle State Space Model Fit — oracle_SSM","text":"Fits state space model treating known set outliers missing data. benchmark model assumes prior knowledge outlier locations intended comparison automatic outlier detection procedures.","code":""},{"path":"/reference/oracle_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oracle State Space Model Fit — oracle_SSM","text":"","code":"oracle_SSM(   y,   init_par,   build,   outlier_locs,   lower = NA,   upper = NA,   control = list(parscale = init_par) )"},{"path":"/reference/oracle_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oracle State Space Model Fit — oracle_SSM","text":"y numeric matrix observations (time points rows). init_par numeric vector initial parameter values. build function returns dlm model given parameter vector. specify_SSM() function can used create build function. outlier_locs integer logical vector length equal number time points, indicating locations known outliers. lower Optional numeric vector lower bounds parameter estimation. Defaults -Inf. Must length init_par. upper Optional numeric vector upper bounds parameter estimation. Defaults Inf. Must length init_par. control Optional list control parameters passed optim via dlm::dlmMLE(). Default list(parscale = init_par), can help optimizer parameters vastly different scales.","code":""},{"path":"/reference/oracle_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Oracle State Space Model Fit — oracle_SSM","text":"object class oracle_SSM containing optimization result, provided outlier locations, original data, original build function.","code":""},{"path":[]},{"path":"/reference/outlier_target_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Model Based on Target Outlier Proportion — outlier_target_model","title":"Select Model Based on Target Outlier Proportion — outlier_target_model","text":"Extracts model robularized_SSM_list object whose estimated outlier proportion closest user-specified target.","code":""},{"path":"/reference/outlier_target_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Model Based on Target Outlier Proportion — outlier_target_model","text":"","code":"outlier_target_model(model_list, target)"},{"path":"/reference/outlier_target_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Model Based on Target Outlier Proportion — outlier_target_model","text":"model_list object class robularized_SSM_list. target numeric value 0 1 indicating desired proportion outlying observations.","code":""},{"path":"/reference/outlier_target_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Model Based on Target Outlier Proportion — outlier_target_model","text":"single robularized_SSM object whose estimated outlier proportion closest target.","code":""},{"path":"/reference/outlier_target_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Model Based on Target Outlier Proportion — outlier_target_model","text":"","code":"if (FALSE) { # \\dontrun{ # Select the model with an outlier proportion closest to 10% target_model <- outlier_target_model(models, target = 0.1) } # }"},{"path":"/reference/robularized_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Regularized Fitting of State Space Models — robularized_SSM","title":"Robust Regularized Fitting of State Space Models — robularized_SSM","text":"Fits robust state space model multivariate time series data using iterative parameter estimation outlier detection. procedure inspired Iterative Procedure Outlier Detection (IPOD) algorithm Owen (2011) applied sequence regularization parameters (\\(\\lambda\\)'s), identifying outliers via Mahalanobis residuals re-fitting model iteratively.","code":""},{"path":"/reference/robularized_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Regularized Fitting of State Space Models — robularized_SSM","text":"","code":"robularized_SSM(   y,   init_par,   build,   num_lambdas = 20,   custom_lambdas = NA,   cores = 1,   B = 50,   lower = NA,   upper = NA,   control = list(parscale = init_par) )"},{"path":"/reference/robularized_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Regularized Fitting of State Space Models — robularized_SSM","text":"y numeric matrix observations, row corresponding time point. init_par numeric vector initial parameter values optimization. build function accepts parameter vector returns dlm model (used dlm::dlmMLE()). specify_SSM function can used create build function. num_lambdas Integer. number \\(\\lambda\\) values evaluate. Ignored custom_lambdas specified. Default 20. custom_lambdas Optional numeric vector. supplied, exact \\(\\lambda\\) values used model fitting. provided set NA, num_lambdas \\(\\lambda\\)'s automatically chosen. cores Integer. Number CPU cores use parallel processing. Default 1 (sequential execution). B Integer. Maximum number IPOD iterations per \\(\\lambda\\). Default 50. lower Optional numeric vector lower bounds optimization. NA, defaults -Inf parameters. Must length init_par. upper Optional numeric vector upper bounds optimization. NA, defaults Inf parameters. Must length init_par. control named list control options pass optim via dlm::dlmMLE(). Default list(parscale = init_par), can help optimizer parameters vastly different scales.","code":""},{"path":"/reference/robularized_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Regularized Fitting of State Space Models — robularized_SSM","text":"one \\(\\lambda\\) values used, returns object class robularized_SSM_list — list containing robularized_SSM model \\(\\lambda\\). one \\(\\lambda\\) value used (.e. custom_lambdas manually specified single value), returns single robularized_SSM object. robularized_SSM object includes: lambda - \\(\\lambda\\) value used. prop_outlying - Proportion non-missing time points identified outliers. BIC - Bayesian Information Criterion final model. loglik - Log-likelihood fitted model. RSS - Residual sum squares. gamma - Matrix estimated outlier adjustments. iterations - Number IPOD iterations performed. Optimization output dlm::dlmMLE() final IPOD iteration. y - original data matrix. build - original build function used specify model.","code":""},{"path":"/reference/robularized_SSM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Robust Regularized Fitting of State Space Models — robularized_SSM","text":"IPOD procedure alternates estimating model parameters via maximum likelihood identifying outlying observations based Mahalanobis residuals. iteration: dlm model fit using dlm::dlmMLE(). Mahalanobis residuals computed. Observations residuals current \\(\\lambda\\) threshold treated missing next iteration. algorithm stops change parameters outlier estimates sufficiently small many outliers detected (50% complete observations).","code":""},{"path":"/reference/robularized_SSM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robust Regularized Fitting of State Space Models — robularized_SSM","text":", Y., & Owen, . B. (2011). Outlier Detection Using Nonconvex Penalized Regression. *Journal American Statistical Association, 106*(494), 626–639. https://doi.org/10.1198/jasa.2011.tm10390","code":""},{"path":[]},{"path":"/reference/simulate_data_study1.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate DCRW Data for Study 1: Different Outlier Configurations — simulate_data_study1","title":"Simulate DCRW Data for Study 1: Different Outlier Configurations — simulate_data_study1","text":"Simulates data sets first-difference correlated random walk (DCRW) state-space model Study 1 paper. study evaluates performance different types outlier configurations. arguments default values matching simulation setup used paper.","code":""},{"path":"/reference/simulate_data_study1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate DCRW Data for Study 1: Different Outlier Configurations — simulate_data_study1","text":"","code":"simulate_data_study1(   sample_sizes = c(100, 200, 500, 1000),   samples = 100,   n_oos = 20,   contamination = 0.1,   distance = 5,   sd_cluster = 2,   mean_cluster = c(20, 20),   multi_level_distances = c(distance - 2, distance, distance + 2),   phi_coef = 0.8,   sigma2_w_lon = 0.1,   sigma2_w_lat = 0.1,   sigma2_v_lon = 0.4,   sigma2_v_lat = 0.4,   initial_state = c(0, 0, 0, 0),   seed = NA )"},{"path":"/reference/simulate_data_study1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate DCRW Data for Study 1: Different Outlier Configurations — simulate_data_study1","text":"sample_sizes Vector sample sizes \\(n\\) simulated dataset. Default c(100, 200, 500, 1000). samples Number simulated data sets per \\(n\\) per outlier configuration. Default 100. n_oos Number --sample (future) timesteps. Default 20. contamination Proportion contaminated (outlying) observations. Default 0.1. distance Distance used fixed-distance outliers. Default 5. sd_cluster Standard deviation cluster cluster-based outliers. Default 2. mean_cluster Mean vector cluster cluster-based outliers. Default c(20, 20). multi_level_distances Vector distances multi-level outliers. Must length 3. Default c(3, 5, 7). phi_coef Autocorrelation parameter DCRW transition matrix. Ranges 0 1. Default 0.8. sigma2_w_lon, sigma2_w_lat State noise variances (longitude latitude). Default 0.1 . sigma2_v_lon, sigma2_v_lat Observation noise variances (longitude latitude). Default 0.4 . initial_state Initial state vector length 4. Default c(0, 0, 0, 0). seed Optional random seed reproducibility. Default NA. Use seed = 1302 reproduce data paper.","code":""},{"path":"/reference/simulate_data_study1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate DCRW Data for Study 1: Different Outlier Configurations — simulate_data_study1","text":"tibble containing simulated data sets. row corresponds simulated data set includes fields sample size, outlier configuration (setting), outliers, clean data, noisy observations, --sample values.","code":""},{"path":[]},{"path":"/reference/simulate_data_study1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate DCRW Data for Study 1: Different Outlier Configurations — simulate_data_study1","text":"","code":"data_study1 = simulate_data_study1(samples = 5, seed = 123)"},{"path":"/reference/simulate_data_study2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","title":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","text":"Simulates datasets first-difference correlated random walk (DCRW) state-space model Study 2 paper. study examines impact increasing contamination levels varying outlier distances model performance. arguments default values matching simulation setup used paper.","code":""},{"path":"/reference/simulate_data_study2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","text":"","code":"simulate_data_study2(   samples = 100,   n = 200,   max_contamination = 0.2,   distances = c(1, 3, 5, 7, 9),   n_oos = 20,   phi_coef = 0.8,   sigma2_w_lon = 0.1,   sigma2_w_lat = 0.1,   sigma2_v_lon = 0.4,   sigma2_v_lat = 0.4,   initial_state = c(0, 0, 0, 0),   seed = NA )"},{"path":"/reference/simulate_data_study2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","text":"samples Number simulated data sets per contamination rate outlier distance. Default 100. n Number -sample timesteps. Default 200. max_contamination Maximum proportion contaminated (outlying) observations. Default 0.2. distances Vector five distances additive outliers. Must length 5. Default c(1, 3, 5, 7, 9). n_oos Number --sample (future) timesteps. Default 20. phi_coef Autocorrelation parameter DCRW transition matrix. Default 0.8. sigma2_w_lon, sigma2_w_lat State noise variances (longitude latitude). Default 0.1 . sigma2_v_lon, sigma2_v_lat Observation noise variances (longitude latitude). Default 0.4 . initial_state Initial state vector length 4. Default c(0, 0, 0, 0). seed Optional random seed reproducibility. Default NA. Use seed = 205 reproduce data paper.","code":""},{"path":"/reference/simulate_data_study2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","text":"tibble containing simulated data sets. row corresponds simulated data set includes fields contamination rate, distance, outliers, clean data, noisy observations, --sample values.","code":""},{"path":"/reference/simulate_data_study2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","text":"equally-spaced sequence five increasing contamination rates 0 max_contamination constructed internally. example, max_contamination = 0.2, contamination rates c(0, 0.05, 0.1, 0.15, 0.2). returned tibble \\(9\\times\\) samples rows, row corresponding unique combination contamination rate distance. levels contamination rate distance 'crossed'; rather, middle contamination rate (e.g. 0.1) crossed distances, middle distance (e.g. 5) crossed contamination rates. result \\(5\\times 1 + 5\\times 1 = 10\\) data sets. However, middle contamination rate middle distance double-counted, total number unique data sets per sample \\(10 - 1 = 9\\).","code":""},{"path":[]},{"path":"/reference/simulate_data_study2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate DCRW Data for Study 2: Increasing Contamination and Varying Outlier Distance — simulate_data_study2","text":"","code":"data_study2 = simulate_data_study2(samples = 5, seed = 456)"},{"path":"/reference/specify_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a State-Space Model in DLM Format — specify_SSM","title":"Specify a State-Space Model in DLM Format — specify_SSM","text":"helper function users construct state-space model format expected dlm package, package used internally model fitting functions. function returns named list model components can directly used user-defined build function passed modeling function package.","code":""},{"path":"/reference/specify_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a State-Space Model in DLM Format — specify_SSM","text":"","code":"specify_SSM(   state_transition_matrix,   state_noise_var,   observation_matrix,   observation_noise_var,   init_state_mean,   init_state_var )"},{"path":"/reference/specify_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a State-Space Model in DLM Format — specify_SSM","text":"state_transition_matrix square matrix specifying state transition dynamics (GG). state_noise_var square matrix specifying variance state noise (W). observation_matrix matrix mapping state observations (FF). observation_noise_var square matrix specifying variance observation noise (V). init_state_mean vector specifying initial mean state (m0). init_state_var square matrix specifying initial state covariance (C0).","code":""},{"path":"/reference/specify_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a State-Space Model in DLM Format — specify_SSM","text":"named list elements GG, W, FF, V, m0, C0, suitable use custom build function modeling online filtering (e.g., using oos_filter).","code":""},{"path":"/reference/specify_SSM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify a State-Space Model in DLM Format — specify_SSM","text":"letters parentheses Arguments section correspond naming convention used dlm package.","code":""},{"path":[]},{"path":"/reference/specify_SSM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a State-Space Model in DLM Format — specify_SSM","text":"","code":"build_function = function(par) {   phi_coef = par[1]   Phi = diag(c(1+phi_coef, 1+phi_coef, 0, 0))   Phi[1,3] = -phi_coef   Phi[2,4] = -phi_coef   Phi[3,1] = 1   Phi[4,2] = 1    A = diag(4)[1:2,]   Sigma_W = diag(c(par[2], par[3], 0, 0))   Sigma_V = diag(c(par[4], par[5]))    mu0 = rep(0, 4)   P0 = diag(rep(0, 4))    specify_SSM(     state_transition_matrix = Phi,     state_noise_var = Sigma_W,     observation_matrix = A,     observation_noise_var = Sigma_V,     init_state_mean = mu0,     init_state_var = P0   ) }"},{"path":"/reference/trimmed_robust_SSM.html","id":null,"dir":"Reference","previous_headings":"","what":"Trimmed-Robust State Space Model Fit — trimmed_robust_SSM","title":"Trimmed-Robust State Space Model Fit — trimmed_robust_SSM","text":"Fits robust state space model minimizing trimmed loss function per Crevits Croux (2018). fixed proportion largest residuals excluded objective, providing robustness extreme outliers. predicted observations used trimmed loss computed using Huber robust filter Cipra Romera (1997).","code":""},{"path":"/reference/trimmed_robust_SSM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trimmed-Robust State Space Model Fit — trimmed_robust_SSM","text":"","code":"trimmed_robust_SSM(   y,   init_par,   build,   alpha,   lower = NA,   upper = NA,   control = list(parscale = init_par) )"},{"path":"/reference/trimmed_robust_SSM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trimmed-Robust State Space Model Fit — trimmed_robust_SSM","text":"y numeric matrix observations (time points rows). init_par numeric vector initial parameter values. build function returns dlm model given parameter vector. specify_SSM() function can used create build function. alpha Numeric value interval [0, 1) indicating trimming proportion (.e., proportion data exclude outliers). lower Optional numeric vector lower bounds parameter estimation. Defaults -Inf. Must length init_par. upper Optional numeric vector upper bounds parameter estimation. Defaults Inf. Must length init_par. control Optional list control parameters passed optim. Default list(parscale = init_par), can help optimizer parameters vastly different scales.","code":""},{"path":"/reference/trimmed_robust_SSM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trimmed-Robust State Space Model Fit — trimmed_robust_SSM","text":"object class trimmed_robust_SSM containing optimization result, trimming level \\(\\alpha\\), original data, original build function.","code":""},{"path":"/reference/trimmed_robust_SSM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trimmed-Robust State Space Model Fit — trimmed_robust_SSM","text":"Crevits R. Croux C. (2018). Robust Estimation Linear State Space Models. *Communications Statistics: Simulation Computation* Cipra, T., Romera, R. (1997). Kalman filter outliers missing observations. *Test* 6, 379–395. https://doi.org/10.1007/BF02564705","code":""},{"path":[]}]
