% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/benchmark_methods.R
\name{huber_robust_SSM}
\alias{huber_robust_SSM}
\title{Huber-Robust State Space Model Fit}
\usage{
huber_robust_SSM(y, init_par, build, lower = NA, upper = NA, control = list())
}
\arguments{
\item{y}{A numeric matrix of observations (variables in rows, time points in columns).}

\item{init_par}{A numeric vector of initial parameter values.}

\item{build}{A function that returns a `dlm` model given a parameter vector.}

\item{lower}{Optional numeric vector of lower bounds for parameter estimation. Defaults to `-Inf`.}

\item{upper}{Optional numeric vector of upper bounds for parameter estimation. Defaults to `Inf`.}

\item{control}{Optional list of control parameters passed to `optim`.}
}
\value{
An object of class `"huber_robust_SSM"` containing the optimization result and the original data.
}
\description{
Fits a robust state space model by minimizing a Huber loss objective, providing protection against moderate outliers. This model estimates parameters by applying a robust filter to the observation errors.
}
\details{
This function calls a custom objective function \code{ruben_filter()} using a Huber-type loss, which requires the internal implementation of that function to be compatible.
}
\seealso{
\code{\link{trimmed_robust_SSM}}, \code{\link{robularized_SSM}}, \code{\link[stats]{optim}}
}
